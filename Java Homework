This document will include every single assignment given.

When there is something added there won't be branching, however when there is a change on the code which I wrote before it will branch.
Also I will update the date with () next to it, so that I can see how much time has passed.

03.13.2019

/*-----------------------------------------------------------------
  1. Klavyeden alinan int turden uc sayi arasindaki buyukluk - 
  kucukluk iliskisini kucukten buyuge dorgu < ve = sembolleriyle 
  gosteriniz.
-----------------------------------------------------------------*/

package deneme;

public class Homework {

	public static void main(String[] args) 
	{

		run();
		
		
	}
	
	public static void run () 
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		System.out.println("Bir sayi giriniz");
		int a = Integer.parseInt(kb.nextLine());
		
		System.out.println("Bir sayi giriniz");
		int b = Integer.parseInt(kb.nextLine());
		
		System.out.println("Bir sayi giriniz");
		int c = Integer.parseInt(kb.nextLine());
		
		relation (a, b, c);
	}
	
	public static void relation (int a, int b, int c) 
	{	
		int temp;
		
		while ((a <= b && b <= c) != true) {
			if(a >= b) {
				temp = b;
				b = a;
				a = temp;
			} else if (b >= c) {
				temp = c;
				c = b;
				b = temp;
			} else if (a >= c) {
				temp = c;
				c = a;
				a = temp;
			}
				
		}
		
		System.out.print(a);
		if (a == b)
			System.out.print(" = ");
		else
			System.out.print(" < ");
		System.out.print(b);
		if (b == c)
			System.out.print(" = ");
		else
			System.out.print(" < ");
		System.out.print(c);
		
	}

}

/*-----------------------------------------------------------------
  2. Parametresi ile aldigi int turden 3 sayidan ortancasina geri 
  donen mid isimli metodu yaziniz test ediniz.
-----------------------------------------------------------------*/

package deneme;

public class Homework {

	public static void main(String[] args) 
	{
		run();
	}
	
	public static void run () 
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		System.out.println("Bir sayi giriniz");
		int a = Integer.parseInt(kb.nextLine());
		
		System.out.println("Bir sayi giriniz");
		int b = Integer.parseInt(kb.nextLine());
		
		System.out.println("Bir sayi giriniz");
		int c = Integer.parseInt(kb.nextLine());
		
		System.out.print(relation (a, b, c));
	}
	
	public static int relation (int a, int b, int c) 
	{	
		int temp;
		
		while ((a <= b && b <= c) != true) {
			if(a >= b) {
				temp = b;
				b = a;
				a = temp;
			} else if (b >= c) {
				temp = c;
				c = b;
				b = temp;
			} else if (a >= c) {
				temp = c;
				c = a;
				a = temp;
			}
				
		}
		
		return b;
	}

}

/*-----------------------------------------------------------------
  3. Parametresi ile aldigi int turden bir sayinin negatif mi, 0(sifir)
  mi, pozitif mi oldugunu test eden signum isimli metodu yaziniz ve
  test ediniz.
-----------------------------------------------------------------*/

package deneme;

public class Homework {

	public static void main(String[] args) 
	{
		System.out.println(signum(run()));
	}
	
	public static int run () 
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		System.out.println("Bir sayi giriniz");
		int a = Integer.parseInt(kb.nextLine());
		
		return a;
	}
	
	public static int signum (int a) 
	{	
		if (a < 0)
			return -1;
		else if (a > 0)
			return 1;
		
		return 0;
	}

}

03.13.2019

/*-----------------------------------------------------------------
  1. Klavyeden bir n sayisi okuyunuz ve asagidaki deseni olusturan
  programi yaziniz (ornegimizde n = 6):
       *
      ***
     *****
    *******
   *********
  ***********
   *********
    *******
     *****
      ***
       *
-----------------------------------------------------------------*/

package deneme;

public class Homework {

	public static void main(String[] args) 
	{
		int a;
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Bir sayi giriniz");
		a = Integer.parseInt(kb.nextLine());
		
		print(a);
	}
	
	public static void print(int a) 
	{
		int goal = 2 * a - 1;
		int space = a - 1;
		int symbol = 1;
		
		for (int i = 0; i < goal; i++) 
		{
			if (i < a) 
			{
				for (int k = space; k > 0; k--)
					System.out.print(" ");
				space--;
			} else
			{
				space++;
				for (int k = 0; k <= space; k++)
					System.out.print(" ");
			}
			
			if (i < a) {
				for (int x = 0; x < symbol; x++)
					System.out.print("*");
				symbol += 2;
			} else
			{
				symbol -= 2;
				for (int x = symbol - 2; x > 0; x--) //Burada bekledigim davranisi yakalayamadim ve kucuk bir hile yaptim
					System.out.print("*");
			}
			
			System.out.println();
		}
	}
}

/*-----------------------------------------------------------------
  2. Parametresi ile aldigi long turden saniye cinsinden sureyi saat,
  dakika ve saniye olarak ayristirarak ekrana yazdiran displayDuration
  isimli metodu yaziniz. Eger saat, dakika ya da saniye degeri 0 ise
  ekrana yazdirilmayacak.
-----------------------------------------------------------------*/

package deneme;

public class Homework {

	public static void main(String[] args) 
	{
		long duration;
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Bir sayi giriniz");
		duration = Long.parseLong(kb.nextLine());
		
		displayDuration(duration);
	}
	
	public static void displayDuration (long a) 
	{
		long saniye = a;
		long dakika = 0;
		long saat = 0;
		
		if (saniye / 60 > 0) 
		{
			dakika = saniye / 60;
			saniye = saniye % 60;
			
			if (dakika / 60 > 0) 
			{
				saat = dakika / 60; 
				dakika = dakika % 60;
			}
		}
		
		if (saat > 0)
			System.out.print(saat + ":" + dakika + ":" + saniye); //printf ile nedense hata veriyor
		else if (dakika > 0)
			System.out.print(dakika + ":" + saniye);
		else
			System.out.print(saniye);
	}
}

03.18.2019

/*-----------------------------------------------------------------
  1. Bir sayinin asal carpanlarini yazdiran program yaziniz. Ornegin:
  
  Sayi: 12
  2 2 3
-----------------------------------------------------------------*/

!!!V. 1!!!

package deneme;

public class Cumartesi_03_16_2019 {

	public static void main(String[] args) 
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Bir sayi giriniz");
		int val = Integer.parseInt(kb.nextLine())
		searchDivition(val);
		
	}
	
	public static void searchDivition(int val) 
	{
		for (int i = 2; i <= val; i++)
		{
			if (val % i == 0)
				findPrime(val);
		}
	}
	
	public static int findPrime(int divider)
	{
		for (int i = 2; i * i <= divider; i++)
			if (divider % i == 0)
				return 0;
		
		return divider;
	}
	
	public static int printPrime() 
	{
		int times;
		return 21;
	}
}

!!!V. 2!!! (03.28.2019)

package csd;

public class Oddev {

	public static void main(String[] args) 
	{
		run();
	}
	
	public static void run()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Bir sayi gir");
		int val = Integer.parseInt(kb.nextLine());
		
		while (val != 1)
		{
			while (val % 2 == 0)
			{
				val = val / 2;
				System.out.print("2 ");
			}
			
			while (val % 3 == 0)
			{
				val = val / 3;
				System.out.print("3 ");
			}
			
			while (val % 5 == 0)
			{
				val = val / 5;
				System.out.print("5 ");
			}
			
			while (val % 7 == 0)
			{
				val = val / 7;
				System.out.print("7 ");
			}
			
			for (int i = 11; i <= val; i++)
			{
				if (val % i == 0)
				{
					if (isPrime(i))
					{
						val = val / i;
						System.out.print(i + " ");
						
						if (val % i == 0)
							i--;
					}
				}
			}
		}
	}
	
	public static boolean isPrime(int val) 
	{
		if (val <= 1)
			return false;
		
		if (val % 2 == 0)
			return val == 2;
		
		if (val % 3 == 0)
			return val == 3;
		
		if (val % 5 == 0)
			return val == 5;
		
		if (val % 7 == 0)
			return val == 7;
		
		if (val % 11 == 0)
			return val == 11;
		
		for (int i = 13; i * i <= val; i += 2)
			if (val % i == 0)
				return false;
		
		return true;
	}
}

/*-----------------------------------------------------------------
  2. Klavyeden bir height ve width degiskenleri icin sayilar okuyunuz
  ve asagidaki deseni olusturunuz:
  |*      |
  | *     |
  |  *    |
  |   *   |
  |    *  |
  |     * |
  |      *|
  |     * |
  |    *  |
-----------------------------------------------------------------*/

!!!V. 1!!!

package deneme;

public class Cumartesi_03_16_2019 {

	public static void main(String[] args) 
	{
		
	}
	
	public static void print(int h, int w) 
	{
		boolean directionFlag = true;
		boolean printFlag;
		int val = 1;
		int[][] matris = new int[h][w];
		
		for (int i = 0; i < h; i++)
		{
			printFlag = true;
			
			for (int k = 0; k < w; k++)
			{
				if (k == 0 || k == w - 1)
					matris[i][k] = '|';
				
				if (printFlag) 
				{
					if (directionFlag) 
					{
						if (val == k)
						{
							if (val == w - 2)
								directionFlag = false;
							matris[i][k] = '*';
							val++;
							printFlag = false;
						}
					} else
					{
						if (val == k)
						{
							if (val == 1)
								directionFlag = true;
							matris[i][k] = '*';
							val--;
							printFlag = false;
						}
					}
				}
			}
		}	
	}
}

!!!V. 1.1!!! (Got help from FÄ±rat Alpay)

package deneme;

public class Cumartesi_03_16_2019 {

	public static void main(String[] args) 
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Iki sayi giriniz");
		
		print(Integer.parseInt(kb.nextLine()),Integer.parseInt(kb.nextLine()));
	}
	
	public static void print(int h, int w) 
	{
		boolean directionFlag = true;
		int val = 0;
		
		for (int i = 0; i < h; i++)
		{
			if (directionFlag)
			{
				val++;
			} else
			{
				val--;
			}
			
			for (int k = 0; k < w; k++)
			{
				if (k == 0 || k == w - 1) 
				{
					System.out.print("|");
					continue;
				}
				
				if ((k > 0 && k < w - 1) && k != val)
				{
					System.out.print(" ");
					continue;
				}
				
				
				if (val == k)
					{
						if (val == w - 2)
							directionFlag = false;
						if (val == 1)
							directionFlag = true;
						System.out.print("*");
						printFlag = false;
					}
					
				
			}
			System.out.println();
		}		
	}
}

/*-----------------------------------------------------------------
  3. 2'den buyuk tum cift sayilar iki asal sayinin toplami biciminde
  yazilabilir (Goldbach teoremi). Klavyeden bir cift sayi alan ve bunu
  iki asal sayinin toplami biciminde yazdiran programi yaziniz. Ornegin:
  
  Sayi: 16
  
  11 + 5
-----------------------------------------------------------------*/

!!!V. 1!!! (03.28.2019)

package csd;

public class Oddev {

	public static void main(String[] args) 
	{
		run();
	}
	
	public static void run()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Bir sayi gir");
		int val = Integer.parseInt(kb.nextLine());
		int i = 2;
		int i2 = 0;
		
		while (true)
		{
			i2 = val - i;
			
			if (isPrime(i2) && isPrime(i))
				break;
			
			i++;
		}
		
		System.out.println(i + " + " + i2);
	}
	
	public static boolean isPrime(int val) 
	{
		if (val <= 1)
			return false;
		
		if (val % 2 == 0)
			return val == 2;
		
		if (val % 3 == 0)
			return val == 3;
		
		if (val % 5 == 0)
			return val == 5;
		
		if (val % 7 == 0)
			return val == 7;
		
		if (val % 11 == 0)
			return val == 11;
		
		for (int i = 13; i * i <= val; i += 2)
			if (val % i == 0)
				return false;
		
		return true;
	}
}

!!!03.20.2019!!!

/*-----------------------------------------------------------------
  1. abc uc basamakli bir tamsayidir ve asagidaki kosullari saglamaktadir:
  
  kosul 1: cba > abc olacak
  kosul 2: abc asal sayi olacak
  kosul 3: cba asal sayi olacak
  kosul 4: ab asal sayi olacak
  kosul 5: bc asal sayi olacak
  kosul 6: cb asal sayi olacak
  kosul 7: ba asal sayi olacak
-----------------------------------------------------------------*/

package csd;

public class Odev {
	public static void main(String[] args) 
	{
		run();
	}
	
	public static void run()
	{
		int x1 = 0;
		int x2 = 0;
		int x3 = 0;
		int i = 100;
		
		while (i <= 999)
		{
			while (i <= 999) 
			{
				int val = i;
				x1 = val % 10;
				val = val / 10;
				x2 = val % 10;
				val = val / 10;
				x3 = val;
				break;
			}
		
			boolean[] control = new boolean[7];
		
			control[0] = kosul1(x3,x2,x1,i);
			control[1] = kosul2(i);
			control[2] = kosul3(x3,x2,x1);
			control[3] = kosul4(x3,x2);
			control[4] = kosul5(x2,x1);
			control[5] = kosul6(x2,x1);
			control[6] = kosul7(x3,x2);
			
			if (control[0] && control[1] && control[2] && control[3] && control[4] && control[5] && control[6])
				System.out.println(i);
			
			i++;
		}
	}
	
	public static boolean kosul1 (int a, int b, int c, int i)
	{
		int val = c * 100 + b * 10 + a; 
		
		if (val > i)
			return true;
		else
			return false;
	}
	
	public static boolean isPrime (int val)
	{
		for (int i = 2; i * i <= val; i++)
			if (val % i == 0)
				return false;
		
		return true;
	}
	
	public static boolean kosul2 (int i)
	{
		return isPrime(i);
	}
	
	public static boolean kosul3 (int a, int b, int c)
	{
		int val = c * 100 + b * 10 + a;
		
		return isPrime(val);
	}
	
	public static boolean kosul4 (int a, int b)
	{	
		int val = a * 10 + b; 
		
		return isPrime(val);
	}
	
	public static boolean kosul5 (int b, int c)
	{
		int val = b * 10 + c;
		
		return isPrime(val);
	}
	
	public static boolean kosul6 (int b, int c)
	{
		int val = c * 10 + b;
		
		return isPrime(val);
	}
	
	public static boolean kosul7 (int a, int b)
	{
		int val = b * 10 + a;
		
		return isPrime(val);
	}
}

/*----------------------------------------------------------------------------------------------------------------------	
	2. Asagidaki aciklanan isPrimeX metodunu yaziniz:
	
	isPrimeX metoduna gonderilen argumanin asal olup olmadigi test edilecek, eger sayi asal ise bu kez sayinin basamak
	degerleri toplanarak elde edilen sayinin asal olup olmadigi test edilecektir. bu islem sonucta tek basamakli bir sayi
	kalana kadar devam edilecektir. Eger en son elde edilen tek basamakli sayi dahil tum sayilar asal ise isPrimeX metodu
	true degerine geri donecektir. Eger herhangi bir kademede asal olmayan bir sayi elde edilirse metot false degerine
	geri donecektir. 
----------------------------------------------------------------------------------------------------------------------*/

package csd;

public class Oddev {

	public static void main(String[] args) 
	{
		run();
	}

	public static void run()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Bir sayi giriniz");
		int val = Integer.parseInt(kb.nextLine());
		
		boolean control = true;
		
		while (val != 0)
		{
			control = isPrimeX(val);
			
			if (control && val >= 10)
				val = ifPrime(val);
			else
				break;
		}
			
		System.out.println(control);
	}
	
	public static boolean isPrimeX(int val)
	{
		if (val <= 1)
			return false;
		
		if (val % 2 == 0)
			return val == 2;
		
		if (val % 3 == 0)
			return val == 3;
		
		if (val % 5 == 0)
			return val == 5;
		
		if (val % 7 == 0)
			return val == 7;
		
		if (val % 11 == 0)
			return val == 11;
		
		for (int i = 13; i * i <= val; i += 2)
			if (val % i == 0)
				return false;
		
		return true;
	}
	
	public static int ifPrime(int prime)
	{
		int count = 0;
		int temp = prime;
		int sum = 0;
		
		while (temp != 0)
		{
			temp = temp / 10;
			count++;
		}
		
		for (int i = 0; i < count; i++)
		{
			sum = sum + prime % 10;
			prime = prime / 10;
		}
		
		return sum;
	}
}

!!!04.01.2019!!!

/*--------------------------------------------------------------------------------------
	1. Klavyeden girilen tamsayi degerlerin, toplam sayisini, en buyugunu, en kucugunu 
	ve ortalamasini hesaplayan programi yaziniz. Kullanicinin her deger girisinden once
	, yeni bir deger girmek isteyip istemedigi asagidaki gibi sorulacaktir
	
	Yeni bir deger girmek istiyor musunuz? [Evet icin 1 hayir icin 0 degerlerinden birini
	giriniz.]
	
	Kullanici 1 sayisini girerse, program kullanicinin bir deger girmesini isteyecektir.
	
	bir tamsayi giriniz: 53 enter
	
	Kullanici 0 sayisini girerse, program o ana kadar girilen degerlerle ilgili olarak 
	asagidaki dokumu ekran ciktisi olarak vererek sonlanacaktir:
	
	Toplam 17 deger girildi.
	Max = 89
	Min = 17
	Ortalama = 37.12311
	
	program sonlandi.
	
	Kaynak programda dizi kullanilmayacaktir.
--------------------------------------------------------------------------------------*/

package csd;

public class Oddev {

	public static void main(String[] args) 
	{
		run();
	}

	public static void run()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		int max = -299999999, min = 299999999, val;
		int count = 0, sum = 0;
		double avg = 0;
		
		System.out.println("Bir deger girmek istiyor musunuz? %n[Evet icin 1, Hayir icin 0 degerlerinden birini giriniz]");
		
		while (Integer.parseInt(kb.nextLine()) == 1)
		{
			System.out.print("Bir sayi giriniz: ");
			val = Integer.parseInt(kb.nextLine());
			
			count++;
			sum += val;
			max = max < val ? val : max;
			min = min > val ? val : min;
			
			System.out.println("Yeni bir deger girmek istiyor musunuz? %n[Evet icin 1, Hayir icin 0 degerlerinden birini giriniz]");
		}
		
		avg = sum / (double)count;
		
		System.out.printf("Toplam %d deger girildi.%nMax = %d%nMin = %d%nOrtalama = %f", count, max, min, avg);
	}
}

/*--------------------------------------------------------------------------------------
	2. Girilen degerler [0 - 100] araliginda olmalidir. Gecersiz bir deger girilmesi
	sirasinda ekrana 
	"gecersiz deger" 
	uyarisi yazilacak ve yeni bir giris yapilmasi istenecektir.
	"yeni bir deger giriniz"
--------------------------------------------------------------------------------------*/

package csd;

public class Oddev {

	public static void main(String[] args) 
	{
		run();
	}

	public static void run()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		int max = -299999999, min = 299999999, val;
		int count = 0, sum = 0;
		double avg = 0;
		
		System.out.printf("Bir deger girmek istiyor musunuz? %n[Evet icin 1, Hayir icin 0 degerlerinden birini giriniz]%n");
		
		while (Integer.parseInt(kb.nextLine()) == 1)
		{
			System.out.print("Bir sayi giriniz: ");
			val = Integer.parseInt(kb.nextLine());
			
			while (val < 0 || val > 100)
			{
				System.out.printf("Gecersiz deger %nBir sayi giriniz: ");
				val = Integer.parseInt(kb.nextLine());
			}
			
			count++;
			sum += val;
			max = max < val ? val : max;
			min = min > val ? val : min;
			
			System.out.printf("Yeni bir deger girmek istiyor musunuz? %n[Evet icin 1, Hayir icin 0 degerlerinden birini giriniz]%n");
		}
		
		avg = sum / (double)count;
		
		System.out.printf("Toplam %d deger girildi.%nMax = %d%nMin = %d%nOrtalama = %f", count, max, min, avg);
	}
}

